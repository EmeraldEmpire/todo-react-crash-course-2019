{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","background","padding","borderBottom","textDecoration","_this","props","todo","completed","_this$props$todo","this","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","React","Component","color","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","key","headerStyle","textAlign","Header","react_router_dom","to","AddTodo","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","bindInput","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","addTodo","inherits","createClass","display","placeholder","flex","className","About","Fragment","App","axios","delete","then","res","filter","data","post","toConsumableArray","_this2","get","_this3","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6001ccb5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoItem extends React.Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: '#f4f4f4',\r\n      padding: '10px',\r\n      borderBottom: '1px #ccc dotted',\r\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div style={ this.getStyle() }> \r\n        <p>\r\n          <input \r\n            type=\"checkbox\" \r\n            onChange={this.props.markComplete.bind(this, id)} />\r\n          { title }\r\n          <button \r\n            style={btnStyle}\r\n            onClick={this.props.delTodo.bind(this, id)} >x</button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n  background: '#ff0000',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '5px 8px',\r\n  borderRadius: '50%',\r\n  cursor: 'pointer',\r\n  float: 'right'\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends React.Component {\r\n  render() {\r\n    return this.props.todos.map(\r\n      todo => (\r\n        <TodoItem \r\n          key={todo.id} \r\n          todo={todo} \r\n          markComplete={this.props.markComplete}\r\n          delTodo={this.props.delTodo} />\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>TodoList</h1>\r\n      <Link to=\"/\" >Home</Link> | <Link to=\"/about\" >About</Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst headerStyle = {\r\n  background: '#333',\r\n  color: '#fff',\r\n  textAlign: 'center',\r\n  padding: '10px'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: ''\r\n  }\r\n\r\n  // dynamically bind input and state properties\r\n  bindInput = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n  onSubmit = (title, e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(title);\r\n    this.setState({ title: '' });\r\n  }\r\n  \r\n  render() {\r\n    const { title } = this.state;\r\n    return (\r\n      <form \r\n        onSubmit={this.onSubmit.bind(this, title)}\r\n        style={{ display: 'flex' }}>\r\n        <input \r\n          type=\"text\" \r\n          name=\"title\" \r\n          placeholder=\"Add Todo\"\r\n          style={{ flex: '10', padding: '5px' }}\r\n          value={title}\r\n          onChange={this.bindInput} />\r\n\r\n        <input \r\n          type=\"submit\" \r\n          value=\"Submit\"\r\n          className=\"btn\"\r\n          style={{ flex: '1' }} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is the TodoList app The Emerald Version</p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  markComplete = id => {\n    this.setState({ \n      todos: this.state.todos.map(todo => {\n       if (todo.id === id) {\n         todo.completed = !todo.completed;\n       }\n       return todo;\n      })\n    });\n  }\n\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => (\n        this.setState({ todos: this.state.todos.filter(todo => todo.id !== id) })\n      ));\n  }\n\n  addTodo = title => {\n    const data = {\n      title,\n      completed: false\n    };\n\n    axios.post('https://jsonplaceholder.typicode.com/todos', data)\n      .then(res => this.setState({ todos: [...this.state.todos, res.data]}));\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos \n                  todos={this.state.todos} \n                  markComplete={this.markComplete} \n                  delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}